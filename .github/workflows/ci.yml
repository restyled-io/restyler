name: CI

on:
  pull_request:
  push:
    branches: main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [linux]

        include:
          - os: linux
            runner: ubuntu-latest

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4
      - id: stack
        uses: freckle/stack-action@v5
      - uses: freckle/weeder-action@v2
        with:
          ghc-version: ${{ steps.stack.outputs.compiler-version }}
      - run: |
          dist=restyler-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)
          mkdir -p "$dist"
          cp -v ${{ steps.stack.outputs.local-install-root }}/bin/* "$dist"
          tar czf "$dist.tar.gz" "$dist"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binaries
          path: "restyler-*.tar.gz"
          if-no-files-found: error

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/hlint-setup@v2
      - uses: haskell-actions/hlint-run@v2
        with:
          fail-on: warning

  image:
    runs-on: ubuntu-latest
    steps:
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: restyled/restyler
          tags: |
            type=sha,prefix=,priority=1000
            type=edge,branch=main
            type=ref,event=tag

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    needs: [build, image]

    steps:
      - name: setup
        run: |
          cat > ~/.netrc <<EOF
          machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF
        env:
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: deploy
        run: |
          read -r tag <<'EOM'
          ${{ needs.image.outputs.tags }}
          EOM
          heroku config:set --app restyled-io "RESTYLER_IMAGE=$tag"

      - uses: desiderati/github-action-pushover@v1
        if: ${{ always() }}
        with:
          job-status: ${{ job.status }}
          pushover-api-token: ${{ secrets.PUSHOVER_API_TOKEN }}
          pushover-user-key: ${{ secrets.PUSHOVER_USER_KEY }}

  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - id: tag
        uses: freckle/haskell-tag-action@v1
      - if: steps.tag.outputs.tag
        uses: actions/download-artifact@v4
      - if: steps.tag.outputs.tag
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          generate_release_notes: true
          files: "*-binaries/restyler-*.tar.gz"
          fail_on_unmatched_files: true
