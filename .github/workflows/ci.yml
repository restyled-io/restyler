name: CI

on:
  pull_request:
  push:
    branches: main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [linux]

        include:
          - os: linux
            runner: ubuntu-latest

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4
      - id: stack
        uses: freckle/stack-action@v5
      - uses: freckle/weeder-action@v2
        with:
          ghc-version: ${{ steps.stack.outputs.compiler-version }}
      - run: |
          dist=restyler-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)
          mkdir -p "$dist"
          cp -v ${{ steps.stack.outputs.local-install-root }}/bin/* "$dist"
          tar czf "$dist.tar.gz" "$dist"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binaries
          path: "restyler-*.tar.gz"
          if-no-files-found: error

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/hlint-setup@v2
      - uses: haskell-actions/hlint-run@v2
        with:
          fail-on: warning

  prerelease:
    # Comment this to update a pre-release from your PR
    # if: ${{ false }}
    env:
      RC_TAG: v0.4.0.0-rc

    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RC_TAG }}
          generate_release_notes: true
          files: "*-binaries/restyler-*.tar.gz"
          fail_on_unmatched_files: true

  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - id: tag
        uses: freckle/haskell-tag-action@v1
      - if: steps.tag.outputs.tag
        uses: actions/download-artifact@v4
      - if: steps.tag.outputs.tag
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          generate_release_notes: true
          files: "*-binaries/restyler-*.tar.gz"
          fail_on_unmatched_files: true

  test-install:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: ./install
      - run: restyle --help
      - run: restyle-gha --help
