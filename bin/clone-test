#!/usr/bin/env bash
set -euo pipefail

# shellcheck disable=SC1091
source ./.env

if (($# != 3)); then
  echo "Usage: bin/clone-test owner repo pull" >&2
  exit 64
fi

owner=$1
repo=$2
pull=$3

pr_details=$(mktemp)
trap 'rm -f "$pr_details"' EXIT

echo "== Fetching PR details =="
curl \
  --silent --fail --show-error \
  --header "Accept: application/json" \
  --header "Authorization: token $GITHUB_ACCESS_TOKEN" \
  "https://api.github.com/repos/$owner/$repo/pulls/$pull" >"$pr_details"

private=$(jq --raw-output '.base.repo.private' <"$pr_details")
base_repo=$(jq --raw-output '.base.repo.full_name' <"$pr_details")
base_ref=$(jq --raw-output '.base.ref' <"$pr_details")
head_repo=$(jq --raw-output '.head.repo.full_name' <"$pr_details")
head_ref=$(jq --raw-output '.head.ref' <"$pr_details")

remote_head_ref=pull/$pull/head
local_head_ref=pull-$pull

if [[ "$private" == 'true' ]]; then
  remote_url=git@github.com:$owner/$repo
else
  remote_url=https://github.com/$owner/$repo
fi

dir=/tmp/$repo-testing
echo "=== $base_repo:$base_ref <- $head_repo:$head_ref ==="

rm -rf "$dir"
mkdir -p "$dir"

echo "=== Cloning ==="
git init --quiet "$dir"
cd "$dir"
git remote add origin "$remote_url"
git fetch --quiet --depth 1 origin "$remote_head_ref:$local_head_ref"
git checkout --no-progress "$local_head_ref"
