name: Restyler
author: pbrisbin

inputs:
  mode:
    description: "summary-only|pull-request|push"
    default: "pull-request"
  fail:
    description: "Fail if differences were produced?"
    default: true
  restyler:
    description: "Restyler binary to run"
    required: true
  log-level:
    description: "Set restyler LOG_LEVEL"
    default: "info"
  github-token:
    description: "GitHub token for fetching PR details"
    default: ${{ github.token }}

outputs: {}

runs:
  using: composite
  steps:
    - if: ${{ github.event_name != 'pull_request' }}
      shell: bash
      run: |
        # Fail on non-PR events
        echo "This action can only be used on pull_request events" >&2
        exit 1

    - if: ${{ github.event.action == 'closed' }}
      shell: bash
      run: |
        # Closing Restyled PR due to source PR closing
        gh pr close 'restyled/${{ github.event.head.ref }}' || true
      env:
        GH_TOKEN: ${{ inputs.github-token }}

    - if: ${{ github.event.action == 'converted_to_draft' }}
      shell: bash
      run: |
        # Closing Restyled PR due to source PR converting to Draft
        gh pr close 'restyled/${{ github.event.head.ref }}' || true
      env:
        GH_TOKEN: ${{ inputs.github-token }}

    - shell: bash
      run: |
        # Storing GitHub event data
        cat > /tmp/event.json <<'EOM'
        ${{ toJSON(github.event) }}
        EOM

    - shell: bash
      run: |
        # Storing Pull Request changed files data
        gh api "/repos/$GH_REPO/pulls/$GH_PR/files" >/tmp/pr-files.json
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        GH_REPO: ${{ github.repository }}
        GH_PR: ${{ github.event.number }}

    - shell: bash
      run: |
        # Run
        $INPUT_RESTYLER
      env:
        INPUT_RESTYLER: ${{ inputs.restyler }}
        LOG_LEVEL: ${{ inputs.log-level }}
        LOG_COLOR: always
        LOG_BREAKPOINT: 200
        RESTYLER_NO_CAP_DROP_ALL: x
        GITHUB_EVENT_JSON: /tmp/event.json
        GITHUB_PR_FILES_JSON: /tmp/pr-files.json
        GIT_AUTHOR_NAME: Restyled.io
        GIT_AUTHOR_EMAIL: commits@restyled.io
        GIT_COMMITTER_NAME: Restyled.io
        GIT_COMMITTER_EMAIL: commits@restyled.io

    - shell: bash
      run: |
        # Output restyled patch
        cat <<'EOM'
        You can manually apply these fixes, if there are any, by copying the
        following and supplying it as stdin to `git am`:

        EOM

        git format-patch --stdout "$GH_HEAD_SHA"

      env:
        GH_HEAD_SHA: ${{ github.event.pull_request.head.sha }}

    # TODO
    #   check if differences
    #   print patch to summary file
    #   mode? -> open PR (fork?), push, or do nothing
    #   fail?
